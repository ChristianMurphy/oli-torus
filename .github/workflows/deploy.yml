name: Package & Deploy

on:
  push:
    branches:
      - test
      - production
    tags:
      - deploy-test

jobs:
  package-and-deploy:
    runs-on: ubuntu-latest

    # only release and deploy if the workflow is running on the test branch, production branch,
    # or a commit is tagged with 'deploy-test'
    if: github.ref == 'refs/heads/test' || 'refs/heads/production' || github.ref == 'refs/tags/deploy-test'

    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v2

      - name: 🧾 Build info
        id: info
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=app_version::$(cat mix.exs | grep version | sed -e 's/.*version: "\(.*\)",/\1/')"
          echo "::set-output name=deploy_host::$(if [[ ${GITHUB_REF##*/} == "production"  ]] ; then echo proton.oli.cmu.edu ; else echo tokamak.oli.cmu.edu ; fi)"

      - name: 📦💽 Package release
        uses: ./.github/actions/phoenix-builder
        with:
          build-sha: ${{ steps.info.outputs.sha_short }}

      - name: 💽⬆️ Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: oli-${{ steps.info.outputs.app_version }}-${{ steps.info.outputs.sha_short }}
          path: _build/prod/rel/oli

      # TODO: add S3 archive support
      # - name: 💽⬆️ Upload release to S3 archive
      #   uses: jakejarvis/s3-sync-action@master
      #   with:
      #     args: --acl public-read --follow-symlinks --delete
      #   env:
      #     AWS_S3_BUCKET: 'oli-torus-releases'
      #     AWS_ACCESS_KEY_ID: ${{ secrets.SIMON_BOT_AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.SIMON_BOT_AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: 'us-east-2'
      #     SOURCE_DIR: 'oli-${{ steps.info.outputs.app_version }}-${{ steps.info.outputs.sha_short }}'

      - name: 🗜️🚢 Zip it & ship it
        run: |
          zip -r oli-${{ steps.info.outputs.app_version }}-${{ steps.info.outputs.sha_short }}.zip _build/prod/rel/oli
          mkdir ~/.ssh
          echo "${{ secrets.SIMON_BOT_PRIVATE_KEY}}" > ~/.ssh/simon-bot
          chmod 600 ~/.ssh/simon-bot
          sftp -i ~/.ssh/simon-bot -o StrictHostKeyChecking=no simon-bot@${{ steps.info.outputs.deploy_host }}  <<< $'cd /torus\n put oli-${{ steps.info.outputs.app_version }}-${{ steps.info.outputs.sha_short }}.zip'

      - name: 💰 Deploy using SSH
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd /torus
            sh deploy.sh ${{ steps.info.outputs.app_version }} ${{ steps.info.outputs.sha_short }}
          host: ${{ steps.info.outputs.deploy_host }}
          user: simon-bot
          key: ${{ secrets.SIMON_BOT_PRIVATE_KEY}}
